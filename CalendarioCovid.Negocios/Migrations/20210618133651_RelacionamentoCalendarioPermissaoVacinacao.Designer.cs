// <auto-generated />
using System;
using CalendarioCovid.Negocios.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalendarioCovid.Negocios.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210618133651_RelacionamentoCalendarioPermissaoVacinacao")]
    partial class RelacionamentoCalendarioPermissaoVacinacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalendarioCovid.Negocios.Models.Calendario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Evento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExigenciaComorbidade")
                        .HasColumnType("bit");

                    b.Property<int>("IdadeMinima")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalendarioVacinacao");
                });

            modelBuilder.Entity("CalendarioCovid.Negocios.Models.PermissaoVacinacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalendarioId")
                        .HasColumnType("int");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalendarioId");

                    b.HasIndex("PessoaId");

                    b.ToTable("PermissaoVacinacao");
                });

            modelBuilder.Entity("CalendarioCovid.Negocios.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comorbidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNascimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TemComorbidade")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("CalendarioCovid.Negocios.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CalendarioCovid.Negocios.Models.PermissaoVacinacao", b =>
                {
                    b.HasOne("CalendarioCovid.Negocios.Models.Calendario", "Calendario")
                        .WithMany()
                        .HasForeignKey("CalendarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalendarioCovid.Negocios.Models.Pessoa", "Pessoa")
                        .WithMany("PermissaoVacinacao")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendario");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CalendarioCovid.Negocios.Models.Usuario", b =>
                {
                    b.HasOne("CalendarioCovid.Negocios.Models.Pessoa", "Pessoa")
                        .WithOne("Usuario")
                        .HasForeignKey("CalendarioCovid.Negocios.Models.Usuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CalendarioCovid.Negocios.Models.Pessoa", b =>
                {
                    b.Navigation("PermissaoVacinacao");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
